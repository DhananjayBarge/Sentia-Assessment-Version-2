{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "virtualNetwork_name": {
      "type": "String",
      "metadata": {
        "description": "Name of the VNet"
      }
    },
    "serverFarm_name": {
      "type": "String",
      "defaultValue": "ServerFarm1",
      "metadata": {
        "description": "Name of the Web Farm"
      }
    },
    "site_name": {
      "type": "String",
      "metadata": {
        "description": "Web App name must be unique DNS name worldwide"
      }
    },
    "virtualNetwork_CIDR": {
      "type": "String",
      "defaultValue": "10.2.0.0/16",
      "metadata": {
        "description": "CIDR of your VNet"
      }
    },
    "subnet1_name": {
      "type": "String",
      "metadata": {
        "description": "Name of the Subnet"
      }
    },
    "subnet1_CIDR": {
      "type": "String",
      "defaultValue": "10.2.1.0/24",
      "metadata": {
        "description": "CIDR of your subnet"
      }
    },
    "privateLinkSubnet_name": {
      "type": "string"
    },
    "privateLinkSubnet_CIDR": {
      "type": "string",
      "defaultValue": "10.3.50.0/24"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "SKU_name": {
      "type": "String",
      "defaultValue": "B1",
      "metadata": {
        "description": "SKU name, must be minimum P1v2"
      }
    },
    "linuxFxVersion": {
      "type": "string",
      "defaultValue": "NODE|14-lts",
      "metadata": {
        "description": "The Runtime stack of current web app"
      }
    },
    "profileName": {
      "type": "string"
    },
    "skuName": {
      "type": "string",
      "defaultValue": "Premium_AzureFrontDoor",
      "allowedValues": [
        "Standard_AzureFrontDoor",
        "Premium_AzureFrontDoor"
      ],
      "metadata": {
        "description": "The name of the SKU to use when creating the Front Door profile."
      }
    },
    "endpointName": {
      "type": "string",
      "defaultValue": "[format('afd-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "The name of the Front Door endpoint to create. This must be globally unique."
      }
    },
    "originGroupName": {
      "type": "string"
    },
    "originName": {
      "type": "string"
    },
    "originHostName": {
      "type": "string"
    },
    "privateEndpointName": {
      "type": "string"
    },
    "wafPolicyName": {
      "type": "string"
    },
    "wafMode": {
      "type": "string",
      "defaultValue": "Prevention",
      "metadata": {
        "description": "The mode that the WAF should be deployed using. In 'Prevention' mode, the WAF will block requests it detects as malicious. In 'Detection' mode, the WAF will not block requests and will simply log the request."
      },
      "allowedValues": [
        "Detection",
        "Prevention"
      ]
    },
    "wafManagedRuleSets": {
      "type": "array",
      "defaultValue": [
        {
          "ruleSetType": "Microsoft_DefaultRuleSet",
          "ruleSetVersion": "1.1"
        },
        {
          "ruleSetType": "Microsoft_BotManagerRuleSet",
          "ruleSetVersion": "1.0"
        }
      ],
      "metadata": {
        "description": "The list of managed rule sets to configure on the WAF."
      }
    },
    "routeName": {
      "type": "string"
    },
    "logAnalyticsWorkspaceName": {
      "type": "string",
      "defaultValue": "[format('la-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "The name of the Log Analytics workspace to create."
      }
    },
    "rgName": {
      "type": "string"
    },
    "subscriptionId": {
      "type": "string"
    },
    "bastion-nsg-name": {
      "type": "string"
    },
    "bastion-pip-name": {
      "type": "string"
    },
    "environment": {
      "type": "string"
    },
    "publicIpAddressType": {
      "type": "string"
    },
    "publicIpAddressSku": {
      "type": "string"
    },
    "bastion-host-name": {
      "type": "string"
    },
    "bastionDNSName": {
      "type": "string"
    },
    "bastion-subnet-name": {
      "type": "string"
    },
    "networkSecurityGroupNamePrivate": {
      "type": "string"
    },
    "networkSecurityGroupRulesPrivate": {
      "type": "string"
    }
  },
  "variables": {
    "privateLinkOriginDetails": {
      "privateLink": {
        "id": "[concat('/subscriptions/', parameters('subscriptionId'),'/resourcegroups/', parameters('rgName'), '/providers/Microsoft.Network/privateEndpoints/', parameters('privateEndpointName'))]"
      },
      "requestMessage": "Please approve this connection."
    }
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2020-04-01",
      "name": "[parameters('virtualNetwork_name')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('virtualNetwork_CIDR')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('subnet1_name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet1_CIDR')]"
            }
          },
          {
            "name": "[parameters('privateLinkSubnet_name')]",
            "properties": {
              "addressPrefix": "[parameters('privateLinkSubnet_CIDR')]",
              "privateEndpointNetworkPolicies": "Disabled"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2020-11-01",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('bastion-nsg-name')]",
      "location": "[parameters('Location')]",
      "properties": {
        "securityRules": [
          {
            "name": "AllowHttpsInBound",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationPortRange": "443",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "AllowGatewayManagerInBound",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "sourceAddressPrefix": "GatewayManager",
              "destinationPortRange": "443",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 110,
              "direction": "Inbound"
            }
          },
          {
            "name": "AllowLoadBalancerInBound",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "sourceAddressPrefix": "AzureLoadBalancer",
              "destinationPortRange": "443",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 120,
              "direction": "Inbound"
            }
          },
          {
            "name": "AllowBastionHostCommunicationInBound",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationPortRanges": [
                "8080",
                "5701"
              ],
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 130,
              "direction": "Inbound"
            }
          },
          {
            "name": "DenyAllInBound",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationPortRange": "*",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 1000,
              "direction": "Inbound"
            }
          },
          {
            "name": "AllowSshRdpOutBound",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationPortRanges": [
                "22",
                "3389"
              ],
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 100,
              "direction": "Outbound"
            }
          },
          {
            "name": "AllowAzureCloudCommunicationOutBound",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationPortRange": "443",
              "destinationAddressPrefix": "AzureCloud",
              "access": "Allow",
              "priority": 110,
              "direction": "Outbound"
            }
          },
          {
            "name": "AllowBastionHostCommunicationOutBound",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationPortRanges": [
                "8080",
                "5701"
              ],
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 120,
              "direction": "Outbound"
            }
          },
          {
            "name": "AllowGetSessionInformationOutBound",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "Internet",
              "destinationPortRanges": [
                "80",
                "443"
              ],
              "access": "Allow",
              "priority": 130,
              "direction": "Outbound"
            }
          },
          {
            "name": "DenyAllOutBound",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 1000,
              "direction": "Outbound"
            }
          }
        ]
      },
      "tags": {
        "environment": "[parameters('environment')]"
      }
    },
    {
      "name": "[parameters('bastion-pip-name')]",
      "type": "Microsoft.Network/publicIpAddresses",
      "apiVersion": "2019-02-01",
      "location": "[parameters('Location')]",
      "properties": {
        "publicIpAllocationMethod": "[parameters('publicIpAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('basitonDNSName')]"
        }
      },
      "sku": {
        "name": "[parameters('publicIpAddressSku')]"
      },
      "tags": {
        "environment": "[parameters('environment')]"
      }
    },
    {
      "apiVersion": "2020-11-01",
      "type": "Microsoft.Network/bastionHosts",
      "name": "[parameters('bastion-host-name')]",
      "location": "[parameters('Location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('bastion-nsg-name'))]",
        "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetwork_name'))]",
        "[resourceId('Microsoft.Network/publicIpAddresses', parameters('bastion-pip-name'))]"
      ],
      "sku": {
        "name": "[parameters('publicIpAddressSku')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "IpConf",
            "properties": {
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetwork_name'), parameters('bastion-subnet-name'))]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIpAddresses', parameters('bastion-pip-name'))]"
              }
            }
          }
        ]
      },
      "tags": {
        "environment": "[parameters('environment')]"
      }
    },
    {
      "name": "[parameters('networkSecurityGroupNamePrivate')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-11-01",
      "location": "[parameters('Location')]",
      "properties": {
        "securityRules": "[parameters('networkSecurityGroupRulesPrivate')]"
      },
      "tags": {
        "environment": "[parameters('environment')]"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2021-02-01",
      "name": "[parameters('serverFarm_name')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('SKU_name')]"
      },
      "kind": "linux",
      "properties": {
        "reserved": true
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-02-01",
      "name": "[parameters('site_name')]",
      "location": "[parameters('location')]",
      "properties": {
        "httpsOnly": true,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverFarm_name'))]",
        "siteConfig": {
          "linuxFxVersion": "[parameters('linuxFxVersion')]",
          "minTlsVersion": "1.2",
          "ftpsState": "FtpsOnly"
        }
      },
      "identity": {
        "type": "SystemAssigned"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('serverFarm_name'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2019-08-01",
      "name": "[concat(parameters('site_name'), '/web')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('site_name'))]"
      ],
      "properties": {
        "ftpsState": "AllAllowed"
      }
    },
    {
      "type": "Microsoft.Cdn/profiles",
      "apiVersion": "2020-09-01",
      "name": "[parameters('profileName')]",
      "location": "global",
      "sku": {
        "name": "[parameters('skuName')]"
      },
      "kind": "frontdoor"
    },
    {
      "type": "Microsoft.Cdn/profiles/afdEndpoints",
      "apiVersion": "2020-09-01",
      "name": "[format('{0}/{1}', parameters('profileName'), parameters('endpointName'))]",
      "location": "Global",
      "properties": {
        "enabledState": "Enabled"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Cdn/profiles', parameters('profileName'))]"
      ]
    },
    {
      "type": "Microsoft.Cdn/profiles/originGroups",
      "apiVersion": "2020-09-01",
      "name": "[format('{0}/{1}', parameters('profileName'), parameters('originGroupName'))]",
      "properties": {
        "loadBalancingSettings": {
          "sampleSize": 4,
          "successfulSamplesRequired": 3
        },
        "healthProbeSettings": {
          "probePath": "/",
          "probeRequestType": "HEAD",
          "probeProtocol": "Http",
          "probeIntervalInSeconds": 100
        },
        "sessionAffinityState": "Disabled"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Cdn/profiles', parameters('profileName'))]"
      ]
    },
    {
      "type": "Microsoft.Cdn/profiles/originGroups/origins",
      "apiVersion": "2020-09-01",
      "name": "[format('{0}/{1}/{2}', parameters('profileName'), parameters('originGroupName'), parameters('originName'))]",
      "properties": {
        "hostName": "[parameters('originHostName')]",
        "httpPort": 80,
        "httpsPort": 443,
        "originHostHeader": "[parameters('originHostName')]",
        "priority": 1,
        "weight": 1000,
        "enabledState": "Enabled",
        "sharedPrivateLinkResource": "[variables('privateLinkOriginDetails')]"

      },
      "dependsOn": [
        "[resourceId('Microsoft.Cdn/profiles/originGroups', parameters('profileName'), parameters('originGroupName'))]",
        "[resourceId('Microsoft.Cdn/profiles', parameters('profileName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/FrontDoorWebApplicationFirewallPolicies",
      "apiVersion": "2020-11-01",
      "name": "[parameters('wafPolicyName')]",
      "location": "global",
      "sku": {
        "name": "[parameters('skuName')]"
      },
      "properties": {
        "policySettings": {
          "enabledState": "Enabled",
          "mode": "[parameters('wafMode')]"
        },
        "managedRules": {
          "managedRuleSets": "[parameters('wafManagedRuleSets')]"
        }
      }
    },
    {
      "type": "Microsoft.Cdn/profiles/securityPolicies",
      "apiVersion": "2020-09-01",
      "name": "[format('{0}/{1}', parameters('profileName'), parameters('originGroupName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Cdn/profiles', parameters('profileName'))]",
        "[resourceId('Microsoft.Cdn/profiles/afdEndpoints', parameters('profileName'), parameters('endpointName'))]",
        "[resourceId('Microsoft.Network/FrontDoorWebApplicationFirewallPolicies', parameters('WAFpolicyName'))]"
      ],
      "properties": {
        "parameters": {
          "wafPolicy": {
            "id": "[resourceId('Microsoft.Network/FrontDoorWebApplicationFirewallPolicies', parameters('WAFpolicyName'))]"
          },
          "associations": [
            {
              "domains": [
                {
                  "id": "[resourceId('Microsoft.Cdn/profiles/afdEndpoints', parameters('profileName'), parameters('endpointName'))]"
                }
              ],
              "patternsToMatch": [
                "/*"
              ]
            }
          ],
          "type": "WebApplicationFirewall"
        }
      }
    },
    {
      "type": "Microsoft.Cdn/profiles/afdEndpoints/routes",
      "apiVersion": "2020-09-01",
      "name": "[format('{0}/{1}/{2}', parameters('profileName'), parameters('endpointName'), parameters('routeName'))]",
      "properties": {
        "originGroup": {
          "id": "[resourceId('Microsoft.Cdn/profiles/originGroups', parameters('profileName'), parameters('originGroupName'))]"
        },
        "supportedProtocols": [
          "Http",
          "Https"
        ],
        "patternsToMatch": [
          "/*"
        ],
        "forwardingProtocol": "HttpOnly",
        "linkToDefaultDomain": "Enabled",
        "httpsRedirect": "Enabled",
        "enabledState": "Enabled"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Cdn/profiles/afdEndpoints', parameters('profileName'), parameters('endpointName'))]",
        "[resourceId('Microsoft.Cdn/profiles/originGroups/origins', parameters('profileName'), parameters('originGroupName'), parameters('originName'))]",
        "[resourceId('Microsoft.Cdn/profiles/originGroups', parameters('profileName'), parameters('originGroupName'))]",
        "[resourceId('Microsoft.Cdn/profiles', parameters('profileName'))]"
      ]
    }
  ]
}